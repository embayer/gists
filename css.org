* float
** bootstrap flat utilities
#+BEGIN_SRC html
<div class="bg-info clearfix"><!-- flaot only in this container -->
  <button type="button" class="btn btn-secondary float-left">Example Button floated left</button>
  <button type="button" class="btn btn-secondary float-right">Example Button floated right</button>
</div>
#+END_SRC

* display line breaks
\n in strings
#+BEGIN_SRC css
.line-break {
  white-space: pre-line;
}
#+END_SRC

* Tables
- tds inherit width from ths

** Sync vertically stacked tables column widths
#+BEGIN_SRC css
table {
  table-layout: fixed;
}
.table-col-1 {
  width: 20%;
}
.table-col-2 {
  width: 80%;
}
#+END_SRC

** Elements in tables are vertically centered

#+BEGIN_SRC css
td {
  vertical-align: baseline;
}
#+END_SRC

** borders

#+BEGIN_SRC css
table, th, td {
  border: 1px solid black;
  border-collapse: collapse;
}
#+END_SRC

** even/odd
Tip: Look at the :nth-of-type() selector to select the element that is the nth child, of a particular type, of its parent.
#+BEGIN_SRC css
tbody tr:nth-child(even) {
  background: #e9e8e9;
}
tbody tr:nth-child(odd) {
  background: #f5f4f5;
}
#+END_SRC

** Microsoft Edge invisible borders on position: sticky <th>s/<td>s

#+BEGIN_SRC css
td th {
  background-clip: padding-box;
}
#+END_SRC

* z-index
- is inherited

* Forms
** Validation

#+BEGIN_SRC css
div {
  margin-bottom: 10px;
  position: relative;
}

input + span {
  padding-right: 30px;
}

input:invalid+span:after {
  position: absolute;
  content: '✖';
  padding-left: 5px;
}

input:valid+span:after {
  position: absolute;
  content: '✓';
  padding-left: 5px;
}
#+END_SRC

* Centering
https://css-tricks.com/centering-css-complete-guide/

* Hover
** Set color for child element on parent:hover

#+BEGIN_SRC css
/*<div class="my-class"><p>White on hover</p></div>*/
  .my-class:hover p {
    color: white;
  }
#+END_SRC

* Grid
** Definition
#+BEGIN_SRC css
display: grid;
grid-template-columns: repeat(3, 1fr);
grid-template-rows: repeat(3, 1fr);
#+END_SRC

** Fixed height
#+BEGIN_SRC css
grid-auto-rows: 30px;
#+END_SRC

** Position elements
#+BEGIN_SRC css
grid-row-start: 1;
grid-column-start: 2;
grid-row-end: 3;
grid-column-end: 4;

/*shorthand*/
grid-area: 1 / 2 / 3 / 4;
/*grid-row-start grid-column-start grid-row-end grid-column-end*/
#+END_SRC

* Flexbox
** Align left and right
#+BEGIN_SRC html
<div id="container">
  <div id="a">a</div>
  <div id="b">b</div>
</div>
#+END_SRC
#+BEGIN_SRC css
#container {
    display: flex;
    justify-content: space-between;
}
#+END_SRC

* Circle with text
https://code-boxx.com/css-circles-text/#sec-text
#+BEGIN_SRC html
<div class="res-circle">
  <div class="circle-txt">{{qualifikation.name}}</div>
</div>
#+END_SRC
#+BEGIN_SRC css
.res-circle {
  width: 20px;
  height: 20px;
  border-radius: 50%;
  line-height: 0;
  background: #bcd6ff;
  position: relative;
}
.res-circle:after {
  content: "";
  display: block;
  padding-bottom: 100%;
}
.circle-txt {
  position: absolute;
  bottom: 50%;
  width: 100%;
  text-align: center;
  font-family: arial, sans-serif;
  font-size: xx-small;
  font-weight: bold;
}
#+END_SRC
